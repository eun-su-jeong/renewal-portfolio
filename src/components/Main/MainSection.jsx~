import styles from "./Main.module.scss";
import cursorImg from "@/assets/images/mouse_cursor.png";
import TextSlice from "@/components/Text/TextSlice.jsx";
import {useEffect, useState} from "react";
import {useMotionValue, useSpring} from "framer-motion";
const MainSection = () => {
    const [show, setShow] = useState(false);


    const mouseX = useMotionValue(0);
    const mouseY = useMotionValue(0);
    const springX = useSpring(mouseX, { damping: 30, stiffness: 150 });
    const springY = useSpring(mouseY, { damping: 30, stiffness: 150 });

    useEffect(() => {
        const timer = setTimeout(() => {
            setShow(true);
        }, 1000);
        return () => clearTimeout(timer);

    }, []);

    useEffect(() => {
        const handleMouseMove = (e) => {
            mouseX.set(e.clientX - 40); // 이미지 중앙 위치 보정
            mouseY.set(e.clientY - 40);
        };
        window.addEventListener("mousemove", handleMouseMove);
        return () => window.removeEventListener("mousemove", handleMouseMove);
    }, [mouseX, mouseY]);

    return (
        <section className={`${styles.mainSection} ${show ? styles.visible : ""}`}>
            <div className={styles.hero}>
                <h2>
                    <TextSlice text={`Sujeong's`} highlight={["e"]}/>
                    <TextSlice text={`Portfolio`} highlight={["o"]}/>
                    <TextSlice text={`Publisher`} highlight={["l","i"]}/>
                    <TextSlice text={`Front-End`}/>
                </h2>
                <div className={styles.imgWrap}>
                    <img
                        src={cursorImg}
                        alt="마우스커서"
                        style={{
                            position: "fixed",
                            top: 0,
                            left: 0,
                            width: "80px",
                            height: "80px",
                            pointerEvents: "none",
                            zIndex: 9999,
                            translateX: springX,
                            translateY: springY,
                        }}
                    />
                </div>
            </div>
        </section>
    )
}
export default MainSection;